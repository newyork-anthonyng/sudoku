{"version":3,"sources":["App.js","api.js","reportWebVitals.js","index.js"],"names":["response","size","squares","x","y","value","emptyGrid","Array","i","length","j","filled","undefined","NumberPicker","props","handleClick","number","onSelect","containerClass","classNames","disabled","buttonClass","class","onClick","App","React","useState","apiData","forEach","square","data","setData","selectedSquare","setSelectedSquare","handleEmptyCellClick","className","map","row","rowIndex","cellIndex","isHighlighted","selectedSquareX","selectedSquareY","currentSquareX","currentSquareY","isSquareHighlighted","squareClass","newGrid","slice","selectedRowIndex","selectedColumnIndex","selectedRow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eca2e8e7.chunk.js","sourcesContent":["import React from \"react\";\nimport apiData from \"./api\";\nimport \"./App.css\";\nimport classNames from \"classnames\";\n\nconst emptyGrid = new Array(9);\nfor (let i = 0; i < emptyGrid.length; i++) {\n  emptyGrid[i] = new Array(9);\n\n  for (let j = 0; j < emptyGrid[i].length; j++) {\n    emptyGrid[i][j] = { filled: false, value: undefined, x: i, y: j };\n  }\n}\n\nfunction NumberPicker(props) {\n  const handleClick = (number) => () => {\n    props.onSelect(number);\n  };\n\n  const containerClass = classNames(\"number-picker\", {\n    \"number-picker--disabled\": props.disabled,\n  });\n  const buttonClass = classNames(\"number-picker__button\", {\n    \"number-picker__button--disabled\": props.disabled,\n  });\n\n  return (\n    <div class={containerClass}>\n      <button class={buttonClass} onClick={handleClick(1)}>\n        1\n      </button>\n      <button class={buttonClass} onClick={handleClick(2)}>\n        2\n      </button>\n      <button class={buttonClass} onClick={handleClick(3)}>\n        3\n      </button>\n      <button class={buttonClass} onClick={handleClick(4)}>\n        4\n      </button>\n      <button class={buttonClass} onClick={handleClick(5)}>\n        5\n      </button>\n      <button class={buttonClass} onClick={handleClick(6)}>\n        6\n      </button>\n      <button class={buttonClass} onClick={handleClick(7)}>\n        7\n      </button>\n      <button class={buttonClass} onClick={handleClick(8)}>\n        8\n      </button>\n      <button class={buttonClass} onClick={handleClick(9)}>\n        9\n      </button>\n    </div>\n  );\n}\n\nfunction isSquareHighlighted(\n  { x: selectedSquareX, y: selectedSquareY } = {},\n  { x: currentSquareX, y: currentSquareY } = {}\n) {\n  return (\n    selectedSquareX === currentSquareX || selectedSquareY === currentSquareY\n  );\n}\n\nfunction App() {\n  const [data, setData] = React.useState(() => {\n    apiData.squares.forEach((square) => {\n      const { x, y, value } = square;\n\n      emptyGrid[x][y] = {\n        ...emptyGrid[x][y],\n        filled: true,\n        value: value,\n      };\n    });\n\n    return emptyGrid;\n  });\n  const [selectedSquare, setSelectedSquare] = React.useState();\n\n  const handleNumberSelect = (number) => {\n    if (!selectedSquare) return;\n    if (selectedSquare.filled) return;\n\n    const newGrid = data.slice();\n    const { x: selectedRowIndex, y: selectedColumnIndex } = selectedSquare;\n    const selectedRow = newGrid[selectedRowIndex].slice();\n\n    selectedRow[selectedColumnIndex] = {\n      ...selectedRow[selectedColumnIndex],\n      value: number,\n    };\n\n    newGrid[selectedRowIndex] = selectedRow;\n\n    setData(newGrid);\n  };\n\n  const handleEmptyCellClick = ({ x, y, filled }) => () => {\n    setSelectedSquare({ x, y, filled });\n  };\n\n  return (\n    <div className=\"container\">\n      {data.map((row, rowIndex) => {\n        return (\n          <div className=\"row\" key={rowIndex}>\n            {row.map(({ value, filled, x, y }, cellIndex) => {\n              const isHighlighted = isSquareHighlighted(selectedSquare, {\n                x,\n                y,\n              });\n\n              const squareClass = classNames(\"square\", {\n                \"square--highighted\": isHighlighted,\n                \"square--selected\":\n                  selectedSquare &&\n                  x === selectedSquare.x &&\n                  y === selectedSquare.y,\n              });\n\n              return (\n                <div className={squareClass} key={cellIndex}>\n                  {filled ? (\n                    <div\n                      className=\"square__input square__input--filled\"\n                      onClick={handleEmptyCellClick({ x, y, filled })}\n                    >\n                      {value}\n                    </div>\n                  ) : (\n                    <div\n                      className=\"square__input square__input--unfilled\"\n                      onClick={handleEmptyCellClick({ x, y, filled })}\n                    >\n                      {value || \" \"}\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        );\n      })}\n      <NumberPicker\n        onSelect={handleNumberSelect}\n        disabled={\n          typeof selectedSquare === \"undefined\" || selectedSquare.filled\n        }\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const response = {\n  response: true,\n  size: \"9\",\n  squares: [\n    { x: 0, y: 4, value: 5 },\n    { x: 1, y: 7, value: 6 },\n    { x: 1, y: 8, value: 8 },\n    { x: 2, y: 1, value: 1 },\n    { x: 2, y: 6, value: 7 },\n    { x: 3, y: 3, value: 6 },\n    { x: 4, y: 2, value: 6 },\n    { x: 4, y: 4, value: 2 },\n    { x: 4, y: 6, value: 9 },\n    { x: 5, y: 1, value: 3 },\n    { x: 5, y: 2, value: 2 },\n    { x: 5, y: 3, value: 5 },\n    { x: 6, y: 0, value: 6 },\n    { x: 6, y: 6, value: 2 },\n    { x: 6, y: 8, value: 9 },\n    { x: 7, y: 1, value: 2 },\n    { x: 7, y: 5, value: 7 },\n    { x: 8, y: 0, value: 5 },\n    { x: 8, y: 4, value: 3 },\n    { x: 8, y: 5, value: 1 },\n  ],\n};\nexport default response;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}